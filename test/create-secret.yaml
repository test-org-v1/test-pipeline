parameters:
- name: 'KUBERNETES_SERVICE_CONNECTION'
  type: string
  default: asg-test-aks-connection
- name: 'CHART_NAME'
  type: string
  default: "jetstack"
- name: 'CHART_URL'
  type: string
  default: "https://charts.jetstack.io"
- name: 'CHART_VERSION'
  type: string
  default: "v1.7.0"
- name: 'RELEASE_NAME'
  type: string
  default: "cert-manager"
- name: 'NAMESPACE'
  type: string
  default: "test"
- name: 'CONTAINER_REGISTRY_HOSTNAME'
  type: string
  default: quay.io
- name: 'CERT_MANAGER_CONTROLLER_IMAGE_TAG'
  type: string
  default: "1.7.0"
- name: 'CERT_MANAGER_CONTROLLER_RESOURCE_LIMITS_CPU'
  type: string
  default: '20m'
- name: 'CERT_MANAGER_CONTROLLER_RESOURCE_LIMITS_MEMORY'
  type: string
  default: '300Mi'
- name: 'CERT_MANAGER_CONTROLLER_RESOURCE_REQUESTS_CPU'
  type: string
  default: '10m'
- name: 'CERT_MANAGER_CONTROLLER_RESOURCE_REQUESTS_MEMORY'
  type: string
  default: '150Mi'
- name: 'CERT_MANAGER_WEBHOOK_IMAGE_TAG'
  type: string
  default: "1.7.0"
- name: 'CERT_MANAGER_WEBHOOK_RESOURCE_LIMITS_CPU'
  type: string
  default: '20m'
- name: 'CERT_MANAGER_WEBHOOK_RESOURCE_LIMITS_MEMORY'
  type: string
  default: '80Mi'
- name: 'CERT_MANAGER_WEBHOOK_RESOURCE_REQUESTS_CPU'
  type: string
  default: '10m'
- name: 'CERT_MANAGER_WEBHOOK_RESOURCE_REQUESTS_MEMORY'
  type: string
  default: '40Mi'
- name: 'CERT_MANAGER_CAINJECTOR_IMAGE_TAG'
  type: string
  default: "1.7.0"
- name: 'CERT_MANAGER_CAINJECTOR_RESOURCE_LIMITS_CPU'
  type: string
  default: '20m'
- name: 'CERT_MANAGER_CAINJECTOR_RESOURCE_LIMITS_MEMORY'
  type: string
  default: '240Mi'
- name: 'CERT_MANAGER_CAINJECTOR_RESOURCE_REQUESTS_CPU'
  type: string
  default: '10m'
- name: 'CERT_MANAGER_CAINJECTOR_RESOURCE_REQUESTS_MEMORY'
  type: string
  default: '120Mi'

steps:
- template: test/repo_add.yaml
  parameters:
    KUBERNETES_SERVICE_CONNECTION: ${{ parameters.KUBERNETES_SERVICE_CONNECTION }}
    CHART_NAME: ${{ parameters.CHART_NAME }}
    CHART_URL: ${{ parameters.CHART_URL }}
- template: test/repo_update.yaml
  parameters:
    KUBERNETES_SERVICE_CONNECTION: ${{ parameters.KUBERNETES_SERVICE_CONNECTION }}

- task: HelmDeploy@0
  displayName: Helm Deploy
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: ${{ parameters.KUBERNETES_SERVICE_CONNECTION }}
    namespace: ${{ parameters.NAMESPACE }}
    chartName: '${{ parameters.CHART_NAME }}/cert-manager'
    releaseName: ${{ parameters.RELEASE_NAME }}
    command: 'upgrade'
    arguments: '--create-namespace --version ${{ parameters.CHART_VERSION }} --debug'
    overrideValues: |
      installCRDs=true
      image.repository=${{ parameters.CONTAINER_REGISTRY_HOSTNAME }}/jetstack/cert-manager-controller
      image.tag=${{ parameters.CERT_MANAGER_CONTROLLER_IMAGE_TAG }}
      resources.limits.cpu=${{ parameters.CERT_MANAGER_CONTROLLER_RESOURCE_LIMITS_CPU }}
      resources.limits.memory=${{ parameters.CERT_MANAGER_CONTROLLER_RESOURCE_LIMITS_MEMORY }}
      resources.requests.cpu=${{ parameters.CERT_MANAGER_CONTROLLER_RESOURCE_REQUESTS_CPU }}
      resources.requests.memory=${{ parameters.CERT_MANAGER_CONTROLLER_RESOURCE_REQUESTS_MEMORY }}
      prometheus.enabled=false
      webhook.image.repository=${{ parameters.CONTAINER_REGISTRY_HOSTNAME }}/jetstack/cert-manager-webhook
      webhook.image.tag=${{ parameters.CERT_MANAGER_WEBHOOK_IMAGE_TAG }}
      webhook.resources.limits.cpu=${{ parameters.CERT_MANAGER_WEBHOOK_RESOURCE_LIMITS_CPU }}
      webhook.resources.limits.memory=${{ parameters.CERT_MANAGER_WEBHOOK_RESOURCE_LIMITS_MEMORY }}
      webhook.resources.requests.cpu=${{ parameters.CERT_MANAGER_WEBHOOK_RESOURCE_REQUESTS_CPU }}
      webhook.resources.requests.memory=${{ parameters.CERT_MANAGER_WEBHOOK_RESOURCE_REQUESTS_MEMORY }}
      cainjector.image.repository=${{ parameters.CONTAINER_REGISTRY_HOSTNAME }}/jetstack/cert-manager-cainjector
      cainjector.image.tag=${{ parameters.CERT_MANAGER_CAINJECTOR_IMAGE_TAG }}
      cainjector.resources.limits.cpu=${{ parameters.CERT_MANAGER_CAINJECTOR_RESOURCE_LIMITS_CPU }}
      cainjector.resources.limits.memory=${{ parameters.CERT_MANAGER_CAINJECTOR_RESOURCE_LIMITS_MEMORY }}
      cainjector.resources.requests.cpu=${{ parameters.CERT_MANAGER_CAINJECTOR_RESOURCE_REQUESTS_CPU }}
      cainjector.resources.requests.memory=${{ parameters.CERT_MANAGER_CAINJECTOR_RESOURCE_REQUESTS_MEMORY }}
- task: Kubernetes@1
  displayName: Label ${{ parameters.NAMESPACE }} Namespace
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: ${{ parameters.KUBERNETES_SERVICE_CONNECTION }}
    command: label
    arguments: namespace ${{ parameters.NAMESPACE }} cert-manager.io/disable-validation=true --overwrite=true
    outputFormat: YAML